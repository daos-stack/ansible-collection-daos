---
- name: Install and configure DAOS server
  hosts: localhost
  gather_facts: true
  connection: local

  vars:
    daos_server_az_rg_name: "{{ lookup('env', 'DAOS_AZ_CORE_RG_NAME') | default('daos-rg') }}"
    daos_server_az_vmss_name: "{{ lookup('env', 'DAOS_AZ_ARM_SERVER_VMSS_NAME') | default('daos-server-vmss') }}"
    daos_server_az_vmss_max_retries: 30 # maximum number of retries (30 retries * 10 seconds = 5 minutes maximum wait time)
    daos_server_az_vmss_polling_interval: 10  # time in seconds between checks
    daos_certs_az_vault_name: "{{ lookup('env', 'DAOS_AZ_ARM_KEY_VAULT_NAME') | default('daos-kv') }}"
    daos_certs_az_vault_uri: "https://{{ daos_certs_az_vault_name }}.vault.azure.net"

  tasks:
    - name: DEBUG daos_server_az_rg_name
      ansible.builtin.debug:
        var: daos_server_az_rg_name

    - name: DEBUG daos_server_az_vmss_name
      ansible.builtin.debug:
        var: daos_server_az_vmss_name

    - name: DEBUG daos_certs_az_vault_name
      ansible.builtin.debug:
        var: daos_certs_az_vault_name

    - name: DEBUG daos_certs_az_vault_uri
      ansible.builtin.debug:
        var: daos_certs_az_vault_uri

    - name: Import selinux role
      import_role:
        name: daos_stack.daos.selinux

    - name: Import packages
      import_role:
        name: daos_stack.daos.packages

    - name: Import tune
      import_role:
        name: daos_stack.daos.tune

    - name: Get VMSS info
      azure.azcollection.azure_rm_virtualmachinescaleset_info:
        resource_group: "{{ daos_server_az_rg_name }}"
        name: "{{ daos_server_az_vmss_name }}"
      register: daos_server_vmss_info
      retries: "{{ daos_server_az_vmss_max_retries }}"
      delay: "{{ daos_server_az_vmss_polling_interval }}"
      until: daos_server_vmss_info.vmss[0].properties.provisioningState == "Succeeded"

    - name: Retrieve VM instances in VMSS
      azure.azcollection.azure_rm_virtualmachinescalesetinstance_info:
        resource_group: "{{ daos_server_az_rg_name }}"
        vmss_name: "{{ daos_server_az_vmss_name }}"
      register: daos_server_vmss_instance_info

    - name: Get bdev addresses
      ansible.builtin.shell: "lspci | grep 'Non-Volatile memory controller' | awk '{print $1}'"
      register: daos_server_lspci_output
      changed_when: false

    - name: Set facts for daos role
      ansible.builtin.set_fact:
        daos_server_bdev_list: '{{ daos_server_lspci_output.stdout_lines }}'
        daos_server_first_host_name: "{{ daos_server_vmss_instance_info.instances[0].computer_name }}"
        daos_host_list: "{{ daos_server_vmss_instance_info.instances | map(attribute='computer_name') | list }}"
        daos_access_points: "{{ daos_server_vmss_instance_info.instances | map(attribute='computer_name') | list | daos_stack.daos.daos_access_points}}"

    - name: DEBUG daos_server_first_host_name
      ansible.builtin.debug:
        var: daos_server_first_host_name

    - name: DEBUG ansible_hostname
      ansible.builtin.debug:
        var: ansible_hostname

    - name: Add localhost to the inventory groups
      add_host:
        name: localhost
        groups: "{{ item }}"
      loop:
        - daos_admins
        - daos_servers
        - daos_clients
      delegate_to: localhost
      run_once: true
      changed_when: false

    - name: Import daos_certs role
      import_role:
        name: daos_certs
      vars:
        daos_certs_store_type: azure_key_vault
        daos_certs_store_push_enabled: "{{ ansible_hostname == daos_server_first_host_name }}"
        daos_certs_store_pull_enabled: true

    - name: DEBUG daos_certs_store_push_enabled
      ansible.builtin.debug:
        var: daos_certs_store_push_enabled

    - name: Import daos role
      import_role:
        name: daos_stack.daos.daos
      vars:
        daos_roles:
          - admin
          - server
        daos_deploy_certs: false
        daos_do_install: true
        daos_do_configuration: true
        daos_do_cert_gen: false
        daos_do_storage_format: false
        daos_do_storage_management: false
        daos_server_user: root
        daos_transport_config_allow_insecure: false
        daos_server_engines:
          - targets: 2
            nr_xs_helpers: 4
            bypass_health_chk: "true"
            fabric_iface: "{{ ansible_default_ipv4.interface }}"
            fabric_iface_port: 31316
            log_mask: ERR
            log_file: "{{ daos_server_log_dir }}/daos_engine.0.log"
            env_vars:
              - "FI_OFI_RXM_DEF_TCP_WAIT_OBJ=pollfd"
              - "DTX_AGG_THD_CNT=16777216"
              - "DTX_AGG_THD_AGE=700"
            storage:
              - scm_mount: /var/daos/ram
                class: ram
              - class: nvme
                bdev_list: "{{ daos_server_bdev_list | to_json }}"
