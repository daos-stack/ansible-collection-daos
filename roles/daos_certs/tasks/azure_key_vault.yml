---
# azure key vault tasks file for daos_certs role

- name: azure_key_vault | DEBUG daos_certs_generate
  debug:
    var: daos_certs_generate

- name: azure_key_vault | DEBUG daos_certs_store_push_enabled
  debug:
    var: daos_certs_store_push_enabled

- name: azure_key_vault | DEBUG daos_certs_store_pull_enabled
  debug:
    var: daos_certs_store_pull_enabled

- name: azure_key_vault | Check to see if secrets exist in Azure key vault
  azure.azcollection.azure_rm_keyvaultsecret_info:
    name: "{{ cert.kv_secret_name }}"
    vault_uri: "{{ daos_certs_az_vault_uri }}"
  register: daos_certs_certs_kv_status
  loop: "{{ daos_certs_certs }}"
  loop_control:
    loop_var: cert

- name: DEBUG daos_certs_certs_kv_status
  debug:
    var: daos_certs_certs_kv_status

- name: azure_key_vault | Convert cert files to base64
  ansible.builtin.shell: base64 "{{ cert.file_name }}" > "{{ cert.file_name }}.base64"
  args:
    chdir: "{{ daos_certs_ca_dir }}/certs"
    creates: "{{ daos_certs_ca_dir }}/certs/{{ cert.file_name }}.base64"
  loop: "{{ daos_certs_certs }}"
  loop_control:
    loop_var: cert
    label: "{{ cert.file_name }}"
  when:
    - daos_certs_generate
    - daos_certs_store_push_enabled
    - daos_certs_certs_kv_status.results | selectattr('cert.file_name', 'equalto', cert.file_name) | map(attribute='secrets') | first | length == 0

  # loop: "{{ daos_certs_certs }}"
  # loop_control:
  #   loop_var: cert
  # when:
  #   - daos_certs_generate
  #   - daos_certs_store_push_enabled
  #   - daos_certs_certs_kv_status.cert.results[]

- name: azure_key_vault | Add certs and keys as secrets in Azure Key Vault
  azure.azcollection.azure_rm_keyvaultsecret:
    secret_name: "{{ cert.kv_secret_name }}"
    secret_value: "{{ lookup('file', daos_certs_ca_dir + '/certs/' + cert.file_name + '.base64' ) }}"
    keyvault_uri: "{{ daos_certs_az_vault_uri }}"
  loop: "{{ daos_certs_certs }}"
  loop_control:
    loop_var: cert
    label: "{{ cert.file_name }}"
  when:
    - daos_certs_generate
    - daos_certs_store_push_enabled
    - daos_certs_certs_kv_status.results | selectattr('cert.file_name', 'equalto', cert.file_name) | map(attribute='secrets') | first | length == 0


  #   - { secret_name: "daosca-cert",
  #       base64_file: "{{ daos_certs_ca_dir }}/certs/daosCA.crt.base64" }
  #   - { secret_name: "admin-cert",
  #       base64_file: "{{ daos_certs_ca_dir }}/certs/admin.crt.base64" }
  #   - { secret_name: "admin-key",
  #       base64_file: "{{ daos_certs_ca_dir }}/certs/admin.key.base64" }
  #   - { secret_name: "agent-cert",
  #       base64_file: "{{ daos_certs_ca_dir }}/certs/agent.crt.base64" }
  #   - { secret_name: "agent-key",
  #       base64_file: "{{ daos_certs_ca_dir }}/certs/agent.key.base64" }
  #   - { secret_name: "server-cert",
  #       base64_file: "{{ daos_certs_ca_dir }}/certs/server.crt.base64" }
  #   - { secret_name: "server-key",
  #       base64_file: "{{ daos_certs_ca_dir }}/certs/server.key.base64" }
  # loop_control:
  #   loop_var: daos_certs_cert
  # when:
  #   - daos_certs_generate
  #   - daos_certs_store_push_enabled

# - name: azure_key_vault | Create /etc/daos/certs/clients dir
#   ansible.builtin.file:
#     path: /etc/daos/certs/clients
#     state: directory
#     recurse: true
#     owner: root
#     group: root
#     mode: '0700'

# - name: azure_key_vault | Retrieve secrets from Azure Key Vault
#   azure.azcollection.azure_rm_keyvaultsecret_info:
#     name: "{{ cert.secret_name }}"
#     vault_uri: "{{ daos_certs_az_vault_uri }}"
#   until: daos_certs_kv_secret_info.secrets is defined and (daos_certs_kv_secret_info.secrets | length) > 0
#   retries: 30
#   delay: 10
#   register: daos_certs_kv_secret_info
#   loop: "{{ daos_certs_kv_secret_list }}"
#   loop_control:
#     loop_var: cert
#   when:
#     - daos_certs_store_pull_enabled

# - name: azure_key_vault | Write decoded secret to file
#   ansible.builtin.copy:
#     content: "{{ daos_certs_cert.secrets[0]['secret'] | b64decode }}"
#     dest: "{{ daos_certs_cert.cert.output_file }}"
#     owner: root
#     group: root
#     mode: '0600'
#   loop: "{{ daos_certs_kv_secret_info.results }}"
#   loop_control:
#     loop_var: daos_certs_cert
#     label: "{{ daos_certs_cert.cert.output_file }}"
#   when:
#     - daos_certs_store_pull_enabled
