---
# defaults for the daos role

# Version of DAOS to install
daos_version: 2.2.0

# URLs for repos
daos_repo_base_url: https://packages.daos.io
daos_repo_gpg_key_url: https://packages.daos.io/RPM-GPG-KEY
daos_repo_enable_source: false
daos_repo_enable_debug: false

# Flags that control various actions performed by the daos role.
# This allows for DAOS to only be installed but not configured when using this
# role to build images with Packer.
daos_do_install: true
daos_do_configuration: true
daos_do_cert_gen: true
daos_do_storage_format: true
daos_do_storage_management: true

# Required to be set in extra-vars, playbook or inventory
# The term "roles" is overloaded here. In this context roles means "what is the
# responsibility of the host within the DAOS cluster.
# Is the host an admin node, a server node, a client node or any combination of
# the three?
daos_roles: []
  # - admin
  # - client
  # - client-test
  # - server
  # - server-test

# Never change these! They are used for when conditions.
daos_role_admin: "admin"
daos_role_client: "client"
daos_role_server: "server"

# ------------------------------------------------------------------------------
# Workarounds
# This is an experimental feature. Allows for custom configurations for known
# issues which may not be resolved for long periods of time.
# ------------------------------------------------------------------------------
# Workarounds can be implemented for issues that
# are waiting to be resolved either in new versions of DAOS or
# in dependencies. This dictionary allows workarounds to be
# defined and enabled/disabled.
daos_workarounds:
  daos_11637:
    enabled: false
    description: |
      Allow DAOS to be installed on DAOS on openSUSE Leap 15.4
      by adding and enabling the older 15.3 distro repos


# ------------------------------------------------------------------------------
# DAOS users
# ------------------------------------------------------------------------------
# These users will be created when DAOS is installed.
daos_server_user: daos_server
daos_agent_user: daos_agent

# This is not to be confused with the server-side binary called daos_admin
# which was renamed to daos_server_helper in DAOS v2.2.0.
# This is the name of user that has admin permissions for the DAOS cluster.
# This user should already exist on all nodes prior to installing DAOS.
# This user is not created by this role or when DAOS is installed.
daos_admin_user: daos_admin


# ------------------------------------------------------------------------------
# Variables for deploying certificates
# TODO: Need to clean these up. Some are not used anymore
# ------------------------------------------------------------------------------

# Use a more friendly name for enabling secure transport
daos_deploy_certs: "{{ not (daos_transport_config_allow_insecure | bool) }}"

# If true, then the cert gen script will be run to generate self signed certs.
# If false, then it will be assumed that the certs have already been generated
# and are located in the path specified in the daos_certs_gen_CA_dir variable.
daos_certs_gen_enable: true
daos_certs_gen_script_path: /usr/lib64/daos/certgen/gen_certificates.sh

# The gen_certificates.sh will create a daosCA directory within in the daos_certs_gen_dir
daos_certs_gen_dir: /etc/daos
daos_certs_gen_CA_dir: /etc/daos/daosCA
daos_certs_dir: /etc/daos/certs

daos_admin_config_dir: "/home/{{ daos_admin_user }}/daos"
daos_admin_certs_dir: "{{ daos_admin_config_dir }}/certs"


# ------------------------------------------------------------------------------
# Variables used for all daos_*.yml configuration files
# ------------------------------------------------------------------------------
daos_port: 10001


# ------------------------------------------------------------------------------
# Variables used for all daos_agent.yml and daos_server.yml configuration files
# ------------------------------------------------------------------------------
daos_access_points: []


# ------------------------------------------------------------------------------
# transport_config: section in all daos_*.yml configuration files
# ------------------------------------------------------------------------------
daos_transport_config_allow_insecure: false
daos_transport_config_clients_cert_dir: /etc/daos/certs/clients
daos_transport_config_ca_cert: /etc/daos/certs/daosCA.crt
daos_transport_config_server_cert: /etc/daos/certs/server.crt
daos_transport_config_server_key: /etc/daos/certs/server.key
daos_transport_config_admin_cert: /etc/daos/certs/admin.crt
daos_transport_config_admin_key: /etc/daos/certs/admin.key
daos_transport_config_agent_cert: /etc/daos/certs/agent.crt
daos_transport_config_agent_key: /etc/daos/certs/agent.key


# ------------------------------------------------------------------------------
# daos_server.yml configuration file
# ------------------------------------------------------------------------------
daos_server_provider: "ofi+tcp;ofi_rxm"
daos_server_disable_vfio: "true"
daos_server_disable_vmd: "true"
daos_server_enable_hotplug: "true"
daos_server_crt_timeout: 60
daos_server_nr_hugepages: 0
daos_server_disable_hugepages: "false"
daos_server_control_log_mask: "INFO"
daos_server_log_dir: /var/daos
daos_server_control_log_file: "{{ daos_server_log_dir }}/daos_server.log"
daos_server_helper_log_file: "{{ daos_server_log_dir }}/daos_admin.log"
daos_server_firmware_helper_log_file: "{{ daos_server_log_dir }}/daos_firmware.log"
daos_server_telemetry_port: 9191

daos_server_engines:
  - targets: 2
    nr_xs_helpers: 0
    # first_core: 0  | pinned_numa_node: 0
    bypass_health_chk: "true"
    fabric_iface: "{{ ansible_default_ipv4.interface }}"
    fabric_iface_port: 31316
    log_mask: ERR
    log_file: "{{ daos_server_log_dir }}/daos_engine.0.log"
    env_vars:
      - "FI_OFI_RXM_DEF_TCP_WAIT_OBJ=pollfd"
      - "DTX_AGG_THD_CNT=16777216"
      - "DTX_AGG_THD_AGE=700"
    storage:
      - scm_mount: /var/daos/ram
        class: ram
        scm_size: 100
      - class: file
        bdev_list: [/tmp/daos-bdev]
        bdev_size: 20

daos_pools: []
  # - label: pool1
  #   size: 2TB
  #   tier_ratio: 3
  #   user: root
  #   group: ""
  #   acls:
  #     - "A::EVERYONE@:rcta"
  #   properties: []
  #   containers:
  #     - label: ""
  #       type: ""
  #       user: ""
  #       group: ""
  #       acls: []
  #       properties: []
  #       user_attributes: []
